#!/bin/zsh
set -euo pipefail

token0=$1
token1=$2
token0Symbol=$3
token1Symbol=$4
token0Decimals=$5
token1Decimals=$6
liquidity=$7
tick=$8
tickLower=$9
tickUpper=$10
feeGrowthGlobal0X128=$11
feeGrowthGlobal1X128=$12
feeGrowthOutsideLower0X128=$13
feeGrowthOutsideLower1X128=$14
feeGrowthOutsideUpper0X128=$15
feeGrowthOutsideUpper1X128=$16
feeGrowthInside0LastX128=$17
feeGrowthInside1LastX128=$18

sqrtPriceL=$(bc -l <<< "scale=18; sqrt(1.0001^$tickLower)")
sqrtPriceH=$(bc -l <<< "scale=18; sqrt(1.0001^$tickUpper)")
sqrtPrice=$(bc -l <<< "scale=18; sqrt(1.0001^$tick)")

if (( tick < tickLower )); then
  # below range
  # amounts
  amount1=0
  amount0=$(bc -l <<< "scale=18; $liquidity * (($sqrtPriceH - $sqrtPriceL) / ($sqrtPriceL * $sqrtPriceH))")
  # fee growth
  feeGrowthInside0X128=$(bc -l <<< "scale=18; $feeGrowthOutsideLower0X128 - $feeGrowthOutsideUpper0X128")
  feeGrowthInside1X128=$(bc -l <<< "scale=18; $feeGrowthOutsideLower1X128 - $feeGrowthOutsideUpper1X128")
elif (( tick >= tickUpper )); then
  # above range
  # amounts
  amount0=0
  amount1=$(bc -l <<< "scale=18; $liquidity * ($sqrtPriceH - $sqrtPriceL)")
  # fee growth
  feeGrowthInside0X128=$(bc -l <<< "scale=18; $feeGrowthGlobal0X128 - $feeGrowthOutsideLower0X128 + $feeGrowthOutsideUpper0X128")
  feeGrowthInside1X128=$(bc -l <<< "scale=18; $feeGrowthGlobal1X128 - $feeGrowthOutsideLower1X128 + $feeGrowthOutsideUpper1X128")
elif (( tick >= tickLower && tick < tickUpper )); then
  # inside range
  # amounts
  amount0=$(bc -l <<< "scale=18; $liquidity * (($sqrtPriceH - $sqrtPrice) / ($sqrtPrice * $sqrtPriceH))")
  amount1=$(bc -l <<< "scale=18; $liquidity * ($sqrtPrice - $sqrtPriceL)")
  # fee growth
  feeGrowthInside0X128=$(bc -l <<< "scale=18; $feeGrowthGlobal0X128 - $feeGrowthOutsideLower0X128 - $feeGrowthOutsideUpper0X128")
  feeGrowthInside1X128=$(bc -l <<< "scale=18; $feeGrowthGlobal1X128 - $feeGrowthOutsideLower1X128 - $feeGrowthOutsideUpper1X128")
fi
amount0=$(bc -l <<< "scale=0; $amount0 / 1")
amount1=$(bc -l <<< "scale=0; $amount1 / 1")

fees0=$(bc -l <<< "scale=18; $liquidity * (($feeGrowthInside0X128 - $feeGrowthInside0LastX128) / 2^128)")
fees1=$(bc -l <<< "scale=18; $liquidity * (($feeGrowthInside1X128 - $feeGrowthInside1LastX128) / 2^128)")
fees0=$(bc -l <<< "scale=0; $fees0 / 1")
fees1=$(bc -l <<< "scale=0; $fees1 / 1")

amount0ui=$(bc -l <<< "scale=$token0Decimals; $amount0 / (10^$token0Decimals)")
amount1ui=$(bc -l <<< "scale=$token1Decimals; $amount1 / (10^$token1Decimals)")

fees0ui=$(bc -l <<< "scale=$token0Decimals; $fees0 / (10^$token0Decimals)")
fees1ui=$(bc -l <<< "scale=$token1Decimals; $fees1 / (10^$token1Decimals)")

jq -n "{symbol0:$token0Symbol,symbol1:$token1Symbol,
token0:\"$token0\",token1:\"$token1\",
amount0ui:$amount0ui,amount1ui:$amount1ui,
claimable0ui:$fees0ui,claimable1ui:$fees1ui,
amount0:\"$amount0\",amount1:\"$amount1\",
claimable0:\"$fees0\",claimable1:\"$fees1\"}"

