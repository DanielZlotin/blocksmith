#!/bin/zsh
set -euo pipefail

chainId=$1
owner=$2
vault=$3

unset ETH_KEYSTORE_ACCOUNT
source setchain $chainId

results=$(cast call $(a mc) 'aggregate3((address,bool,bytes)[])((bool,bytes)[])' "[ \
  ($vault,false,$(cast calldata "token0()")), \
  ($vault,false,$(cast calldata "token1()")), \
  ($vault,false,$(cast calldata "balanceOf(address)" $owner)), \
  ]" |
  tr -d '[],' |
  sed -E 's@\((true|false) (0x[0-9a-fA-F]*)\)@\2@g' |
  tr ' ' '\n'
)

token0=$(cast abi-decode "f()(address)" $(echo $results | sed -n "1p") | cut -d " " -f1)
token1=$(cast abi-decode "f()(address)" $(echo $results | sed -n "2p") | cut -d " " -f1)
vbalance=$(cast abi-decode "f()(uint256)" $(echo $results | sed -n "3p") | cut -d " " -f1)

withdraw=$(cast call $vault "withdraw(uint256,address)(uint256,uint256)" $vbalance $owner --from $owner)

amount0=$(echo $withdraw | sed -n '1p' | cut -d " " -f1)
amount1=$(echo $withdraw | sed -n '2p' | cut -d " " -f1)

results=$(cast call $(a mc) 'aggregate3((address,bool,bytes)[])((bool,bytes)[])' "[ \
  ($token0,false,$(cast calldata "decimals()")), \
  ($token1,false,$(cast calldata "decimals()")), \
  ($token0,false,$(cast calldata "symbol()")), \
  ($token1,false,$(cast calldata "symbol()")) \
  ]" |
  tr -d '[],' |
  sed -E 's@\((true|false) (0x[0-9a-fA-F]*)\)@\2@g' |
  tr ' ' '\n'
)

decimals0=$(cast abi-decode "f()(uint256)" $(echo $results | sed -n "1p") | cut -d " " -f1)
decimals1=$(cast abi-decode "f()(uint256)" $(echo $results | sed -n "2p") | cut -d " " -f1)
symbol0=$(cast abi-decode "f()(string)" $(echo $results | sed -n "3p") | cut -d " " -f1)
symbol1=$(cast abi-decode "f()(string)" $(echo $results | sed -n "4p") | cut -d " " -f1)

amount0ui=$(bc -l <<< "scale=$decimals0; $amount0 / (10^$decimals0)")
amount1ui=$(bc -l <<< "scale=$decimals1; $amount1 / (10^$decimals1)")

jq -n "{symbol0:$symbol0,symbol1:$symbol1,
token0:\"$token0\",token1:\"$token1\",
amount0ui:$amount0ui,amount1ui:$amount1ui,
amount0:\"$amount0\",amount1:\"$amount1\"
}"

